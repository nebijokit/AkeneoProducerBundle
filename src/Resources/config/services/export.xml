<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>

        <service id="sylake_akeneo_producer.connector.job.attribute" class="%pim_connector.step.item_step.class%">
            <argument>publish_attribute_step</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="service" id="pim_connector.reader.database.attribute" />
            <argument type="service" id="pim_connector.processor.normalization.attribute" />
            <argument type="service" id="sylake_akeneo_producer.connector.writer.rabbit_mq.attribute" />
        </service>

        <service id="sylake_akeneo_producer.connector.job.attribute_option" class="%pim_connector.step.item_step.class%">
            <argument>publish_attribute_option_step</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="service" id="pim_connector.reader.database.attribute_option" />
            <argument type="service" id="pim_connector.processor.normalization.attribute_option" />
            <argument type="service" id="sylake_akeneo_producer.connector.writer.rabbit_mq.attribute_option" />
        </service>

        <service id="sylake_akeneo_producer.connector.job.association_type" class="%pim_connector.step.item_step.class%">
            <argument>publish_association_type_step</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="service" id="pim_connector.reader.database.association_type" />
            <argument type="service" id="pim_connector.processor.normalization.association_type" />
            <argument type="service" id="sylake_akeneo_producer.connector.writer.rabbit_mq.association_type" />
        </service>

        <service id="sylake_akeneo_producer.connector.job.category" class="%pim_connector.step.item_step.class%">
            <argument>publish_category_step</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="service" id="pim_connector.reader.database.category" />
            <argument type="service" id="pim_connector.processor.normalization.category" />
            <argument type="service" id="sylake_akeneo_producer.connector.writer.rabbit_mq.category" />
        </service>

        <service id="sylake_akeneo_producer.connector.job.family" class="%pim_connector.step.item_step.class%">
            <argument>publish_family_step</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="service" id="pim_connector.reader.database.family" />
            <argument type="service" id="pim_connector.processor.normalization.family" />
            <argument type="service" id="sylake_akeneo_producer.connector.writer.rabbit_mq.family" />
        </service>

        <service id="sylake_akeneo_producer.connector.job.group" class="%pim_connector.step.item_step.class%">
            <argument>publish_group_step</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="service" id="pim_connector.reader.database.group" />
            <argument type="service" id="pim_connector.processor.normalization.group" />
            <argument type="service" id="sylake_akeneo_producer.connector.writer.rabbit_mq.group" />
        </service>

        <service id="sylake_akeneo_producer.connector.job.product" class="%pim_connector.step.item_step.class%">
            <argument>publish_product_step</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="service" id="pim_connector.reader.database.product" />
            <argument type="service" id="pim_connector.processor.normalization.product" />
            <argument type="service" id="sylake_akeneo_producer.connector.writer.rabbit_mq.product" />
        </service>

        <service id="sylake_akeneo_producer.connector.job" class="%pim_connector.job.simple_job.class%">
            <argument>sylake_akeneo_producer</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="collection">
                <argument type="service" id="sylake_akeneo_producer.connector.job.attribute" />
                <argument type="service" id="sylake_akeneo_producer.connector.job.attribute_option" />
                <argument type="service" id="sylake_akeneo_producer.connector.job.association_type" />
                <argument type="service" id="sylake_akeneo_producer.connector.job.category" />
                <argument type="service" id="sylake_akeneo_producer.connector.job.family" />
                <argument type="service" id="sylake_akeneo_producer.connector.job.group" />
                <argument type="service" id="sylake_akeneo_producer.connector.job.product" />
            </argument>
            <tag name="akeneo_batch.job" connector="AkeneoProducerBundle connector" type="%pim_connector.job.export_type%" />
        </service>

        <service id="sylake_akeneo_producer.connector.job.export_product" class="%pim_connector.job.simple_job.class%">
            <argument>sylake_akeneo_export_product</argument>
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="akeneo_batch.job_repository" />
            <argument type="collection">
                <argument type="service" id="sylake_akeneo_producer.connector.job.product" />
            </argument>
            <tag name="akeneo_batch.job" connector="AkeneoProducerBundle connector" type="%pim_connector.job.export_type%" />
        </service>

        <service id="sylake_akeneo_producer.connector.job_parameters"
                 class="Sylake\AkeneoProducerBundle\Connector\JobParameters\AkeneoProducer" lazy="true">
            <argument type="service" id="pim_connector.job.job_parameters.default_values_provider.product_csv_export" />
            <argument type="service" id="pim_connector.job.job_parameters.constraint_collection_provider.product_csv_export" />
            <argument type="collection">
                <argument>sylake_akeneo_producer</argument>
                <argument>sylake_akeneo_export_product</argument>
            </argument>
            <argument>%sylake_akeneo_producer.config.locales%</argument>
            <argument>%sylake_akeneo_producer.config.scope%</argument>
            <tag name="akeneo_batch.job.job_parameters.default_values_provider" />
            <tag name="akeneo_batch.job.job_parameters.constraint_collection_provider" />
        </service>

        <service class="%pim_enrich.provider.form.job_instance.class%">
            <argument type="collection">
                <argument key="sylake_akeneo_producer">pim-job-instance-sylake-akeneo-producer</argument>
                <argument key="sylake_akeneo_export_product">pim-job-instance-sylake-akeneo-export-product</argument>
            </argument>
            <tag name="pim_enrich.provider.form" />
        </service>

        <service id="sylake_akeneo_producer.connector.writer.rabbit_mq.attribute"
                 class="Sylake\AkeneoProducerBundle\Connector\Writer\RabbitMqItemWriter" public="false">
            <argument type="service" id="old_sound_rabbit_mq.sylake_producer" />
            <argument type="string">akeneo_attribute_updated</argument>
        </service>

        <service id="sylake_akeneo_producer.connector.writer.rabbit_mq.attribute_option"
                 class="Sylake\AkeneoProducerBundle\Connector\Writer\RabbitMqItemWriter" public="false">
            <argument type="service" id="old_sound_rabbit_mq.sylake_producer" />
            <argument type="string">akeneo_attribute_option_updated</argument>
        </service>

        <service id="sylake_akeneo_producer.connector.writer.rabbit_mq.association_type"
                 class="Sylake\AkeneoProducerBundle\Connector\Writer\RabbitMqItemWriter" public="false">
            <argument type="service" id="old_sound_rabbit_mq.sylake_producer" />
            <argument type="string">akeneo_association_type_updated</argument>
        </service>

        <service id="sylake_akeneo_producer.connector.writer.rabbit_mq.product"
                 class="Sylake\AkeneoProducerBundle\Connector\Writer\RabbitMqItemWriter" public="false">
            <argument type="service" id="old_sound_rabbit_mq.sylake_producer" />
            <argument type="string">akeneo_product_updated</argument>
        </service>

        <service id="sylake_akeneo_producer.connector.writer.rabbit_mq.category"
                 class="Sylake\AkeneoProducerBundle\Connector\Writer\RabbitMqItemWriter" public="false">
            <argument type="service" id="old_sound_rabbit_mq.sylake_producer" />
            <argument type="string">akeneo_category_updated</argument>
        </service>

        <service id="sylake_akeneo_producer.connector.writer.rabbit_mq.family"
                 class="Sylake\AkeneoProducerBundle\Connector\Writer\RabbitMqItemWriter" public="false">
            <argument type="service" id="old_sound_rabbit_mq.sylake_producer" />
            <argument type="string">akeneo_family_updated</argument>
        </service>

        <service id="sylake_akeneo_producer.connector.writer.rabbit_mq.group"
                 class="Sylake\AkeneoProducerBundle\Connector\Writer\RabbitMqItemWriter" public="false">
            <argument type="service" id="old_sound_rabbit_mq.sylake_producer" />
            <argument type="string">akeneo_group_updated</argument>
        </service>
    </services>
</container>
